//////////.......same solution for gfg and leetCode.........../////////


class Solution{
    
    pair<bool, int> isBalancedFast(Node* root){
        
        if(!root){
            pair<bool, int>p = make_pair(true, 0);
            return p;
        }
        pair<bool, int> left = isBalancedFast(root->left);
        pair<bool, int> right = isBalancedFast(root->right);
        
        bool leftans = left.first;
        bool rightans = right.first;
        int diff = abs(left.second-right.second) <= 1;
        
        pair<bool,int> ans;
        
        ans.second = max(left.second , right.second )+1;
        if(leftans && rightans && diff){
            ans.first = true;
        }
         
         else{
             ans.first = false;
             
         }
         return ans;
    }
    public:
    //Function to check whether a binary tree is balanced or not.
    bool isBalanced(Node *root)
    {
        return isBalancedFast(root).first;
    }
};
